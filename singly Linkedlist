#include<stdio.h>
#include<stdlib.h>
 struct node{
        int data;
        struct node *next;
    };
 struct node *head=NULL ;
void insertion(){
    int x;
    struct node *temp=head;
    printf("Enter no. of insertion:");
    scanf("%d",&x);
    for(int i=0;i<x;i++)
    {
    struct node *nn;
    nn=(struct node *)malloc(sizeof (struct node));
    printf("\n\tEnter data:");
    scanf("%d",&nn->data);
    if(head==0)
    {
        head =temp=nn;
    }
    else{
        temp->next=nn;
        temp=nn;
    }
    }
}
void display() {
    struct node *temp=head;
    if (head == NULL) {
        printf("\n Empty\n");
    } else {
        int count=0;
        printf("\n\tThe Elements is \n");
        while (temp != 0) {
            printf("%d  ", temp->data);
            temp = temp->next;
            count++;
        }
    }
}
void Delete()
{  struct node *nextnode, *temp;
    int p;
    printf("\n\tEnter position you want to delete:");
    scanf("%d",&p);
    temp=head;
    int i;
    while(i< p-1)
    {
        temp=temp->next;
        i++;
    }
    nextnode=temp->next;
    temp->next=nextnode->next;
    free(nextnode);

}
void main ()
{
int choice=0;
printf("\n\tTHIS IS SIMPLE LINKED LIST");
while(choice!=4)
{
printf("\n\tEnter choice \n\t1.INSERTION \n\t2.DELETION \n\t3.DISPLAY \n\t4.EXIT");
scanf("%d",&choice);
switch(choice)
{
    case 1: insertion();
            break;
    case 2: Delete();
            display();
            break;
    case 3:display();
            break;
    case 4: printf("EXITING....");
            break;
}
}
}
